on:
  push:
    tags:
      - v*
    branches:
      - main
  pull_request:

env:
  GO_VERSION: 1.15
  GEX_VERSION: v0.6.1
  PROTOC_VERSION: 3.13.0
  GOLANGCI_LINT_VERSION: v1.32 

jobs:
  lint:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - uses: actions/cache@v2
        with:
          path: ~/.cache/golangci-lint
          key: ${{ runner.os }}-golangci-lint-${{ env.GOLANGCI_LINT_VERSION }}
          restore-keys: |
            ${{ runner.os }}-golangci-lint-${{ env.GOLANGCI_LINT_VERSION }}

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}

  build:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - uses: actions/cache@v2
        id: cache-gomod
        with:
          path: ~/go/pkg
          key: ${{ runner.os }}-gopkg-${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gopkg-${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum') }}
            ${{ runner.os }}-gopkg-${{ env.GO_VERSION }}-
            ${{ runner.os }}-gopkg-

      - name: Download dependencies
        if: steps.cache-gomod.outputs.cache-hit != 'true'
        run: |
          go mod download

      - uses: actions/cache@v2
        id: cache-gobin
        with:
          path: ~/go/bin
          key: ${{ runner.os }}-gobin-${{ env.GEX_VERSION }}
          restore-keys: |
            ${{ runner.os }}-gobin-${{ env.GEX_VERSION }}

      - name: Download and build gex
        if: steps.cache-gobin.outputs.cache-hit != 'true'
        run: |
          cd /tmp && go get github.com/izumin5210/gex/cmd/gex@${{ env.GEX_VERSION }}

      - uses: actions/cache@v2
        with:
          path: tmp/
          key: ${{ runner.os }}-tmp-${{ env.PROTOC_VERSION }}
          restore-keys: |
            ${{ runner.os }}-tmp-${{ env.PROTOC_VERSION }}

      - name: Start etcd daemon
        run: |
          docker-compose up -d etcd

      - name: Check that go.mod and go.sum is up-to-date
        run: |
          go mod tidy
          if [[ $(git diff --name-only | grep -E "go\.(sum|mod)" || echo -n "") != "" ]]; then \
            echo "go.sum or go.mod is not updated."; \
            exit 1; \
          fi

      - name: Generated mocks are up-to-date
        run: |
          make mock
          if [[ $(git diff --name-only) != "" ]]; then \
            echo "Generated mocks is not updated."; \
            exit 1; \
          fi

      - name: Generated ProtocolBuffers sources are up-to-date
        run: |
          make pb
          if [[ $(git diff --name-only) != "" ]]; then \
            echo "*.pb.go are not updated."; \
            exit 1; \
          fi

      - name: Build all commands
        run: |
          make

      - name: Test
        run: |
          make test
